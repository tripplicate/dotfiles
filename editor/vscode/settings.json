{
  // open config in json format
  "workbench.settings.editor": "ui",
  "workbench.iconTheme": "minimal-icons-without-explorer-arrows",
  "workbench.productIconTheme": "material-product-icons",
  // General
  "workbench.startupEditor": "none",
  "window.commandCenter": false,
  "window.titleBarStyle": "native", // For arch linux use "native" else "custom"
  "window.menuBarVisibility": "toggle",
  "editor.scrollbar.vertical": "auto",
  "editor.scrollbar.horizontal": "auto",
  "editor.minimap.enabled": false,
  "breadcrumbs.enabled": false,
  "explorer.compactFolders": false,
  "explorer.confirmDelete": false,
  "editor.tabSize": 2,
  "files.trimTrailingWhitespace": true,
  "editor.linkedEditing": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  // Font Family
  "editor.fontFamily": "JetBrains Mono",
  "scm.inputFontFamily": "JetBrains Mono",
  "terminal.integrated.fontFamily": "JetBrains Mono",
  "chat.editor.fontFamily": "JetBrains Mono",
  "markdown.preview.fontFamily": "JetBrains Mono",
  "notebook.output.fontFamily": "JetBrains Mono",
  "debug.console.fontFamily": "JetBrains Mono",
  "editor.inlayHints.fontFamily": "JetBrains Mono",
  "editor.codeLensFontFamily": "JetBrains Mono",
  // Font size and cursor settings
  "editor.fontSize": 16,
  "terminal.integrated.fontSize": 14,
  "keyboard.dispatch": "keyCode",
  "editor.fontLigatures": false,
  "editor.cursorSmoothCaretAnimation": "on",
  // Linter, formatter
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.fixAll.stylelint": "explicit",
    "source.organizeImports": "never"
  },
  "css.validate": false,
  "scss.validate": false,
  "stylelint.validate": [
    "css",
    "scss",
    "postcss",
    "vue"
  ],
  "[vue]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
  },
  // APC
  "apc.electron": {
    "titleBarStyle": "hiddenInset",
    "trafficLightPosition": {
      "x": 7,
      "y": 5
    }
  },
  "apc.activityBar": {
    "position": "bottom",
    "hideSettings": true,
    "size": 40,
    "itemSize": 32
  },
  "apc.statusBar": {
    "position": "editor-bottom",
    "height": 40,
    "fontSize": 14
  },
  // Configs for languages
  "[markdown]": {
    "editor.renderWhitespace": "all",
  },
  "files.exclude": {
    "**/.vscode": false,
    "**/.husky": false,
    "**/.git": false,
    "**/.svn": false,
    "**/.next": false,
    "**/.nuxt": false,
    "**/node_modules": false,
    "**/.cache": false,
    "**/dist": false,
    "**/build": false,
    "**/.gitignore": false,
    "**/pnpm-lock.yaml": false,
    "**/.npmrc": false,
    "**/package-lock.json": false,
    "**/.yarnrc": false,
    "**/yarn.lock": false,
    "**/*.config.*": false,
    "**/.eslintrc": false,
    "**/.eslintrc.*": false,
    "**/.prettierrc": false,
    "**/.prettierrc.*": false,
    "**/.commitlintrc": false,
    "**/.commitlintrc.*": false,
    "**/go.sum": false,
    "**/go.mod": false
  },
  // Whichkey
  "whichkey.sortOrder": "alphabetically",
  "whichkey.delay": 0,
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "Open command pallete",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "h",
      "name": "Toggle exclude files",
      "type": "command",
      "command": "toggleexcludedfiles.toggle"
    },
    {
      "key": "u",
      "name": "Change view of interface",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Go to Explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "t",
          "name": "Go to Tests",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "g",
          "name": "Go to Git Source",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "x",
          "name": "Go to Extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "m",
          "name": "Go to TODO Tree",
          "type": "command",
          "command": "workbench.view.extension.todo-tree-container"
        },
      ]
    },
    {
      "key": "f",
      "name": "File",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "name": "Save",
          "type": "command",
          "command": "workbench.action.files.save"
        },
        {
          "key": "c",
          "name": "Close",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
      ]
    },
    {
      "key": "s",
      "name": "Search",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "t",
          "name": "Text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        },
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "/",
          "name": "Search Commits",
          "command": "gitlens.showCommitSearch",
          "type": "command",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "a",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "B",
          "name": "Browse",
          "type": "command",
          "command": "gitlens.openFileInRemote"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "C",
          "name": "Cherry Pick",
          "type": "command",
          "command": "gitlens.views.cherryPick"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "F",
          "name": "Pull From",
          "type": "command",
          "command": "git.pullFrom"
        },
        {
          "key": "g",
          "name": "Graph",
          "type": "command",
          "command": "git-graph.view"
        },
        {
          "key": "h",
          "name": "Heatmap",
          "type": "command",
          "command": "gitlens.toggleFileHeatmap"
        },
        {
          "key": "H",
          "name": "History",
          "type": "command",
          "command": "git.viewFileHistory"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "j",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },
        {
          "key": "k",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "l",
          "name": "Toggle Line Blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "L",
          "name": "Toggle GitLens",
          "type": "command",
          "command": "gitlens.toggleCodeLens",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.push"
        },
        {
          "key": "P",
          "name": "Pull",
          "type": "command",
          "command": "git.pull"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Status",
          "type": "command",
          "command": "gitlens.showQuickRepoStatus",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "t",
          "name": "Create Tag",
          "type": "command",
          "command": "git.createTag"
        },
        {
          "key": "T",
          "name": "Delete Tag",
          "type": "command",
          "command": "git.deleteTag"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
  ],
  // Vim
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<space>"
      ],
      "commands": [
        "whichkey.show"
      ]
    },
    {
      "before": [
        "<C-h>"
      ],
      "commands": [
        "workbench.action.previousEditor"
      ]
    },
    {
      "before": [
        "<C-l>"
      ],
      "commands": [
        "workbench.action.nextEditor"
      ]
    },
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<space>"
      ],
      "commands": [
        "whichkey.show"
      ]
    }
  ],
}